{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/steve/Desktop/Projects/recipes/src/screens/Auth/LoginScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Button } from 'galio-framework';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onPressLogin = function () {\n      _this.user.current.clear();\n\n      _this.password.current.clear();\n\n      _this.props.navigation.navigate('Home');\n    };\n\n    _this.state = {\n      user: '',\n      password: ''\n    };\n    _this.user = React.createRef();\n    _this.password = React.createRef();\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          user = _this$state.user,\n          password = _this$state.password;\n      var isEnabled = user.length > 0 && password.length > 0;\n      return React.createElement(View, {\n        style: styles.authContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.textInputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        name: \"user\",\n        style: styles.textInput,\n        placeholder: \"User\",\n        placeholderTextColor: \"#6363638a\",\n        onChangeText: function onChangeText(evt) {\n          _this2.setState({\n            user: evt\n          });\n        },\n        ref: this.user,\n        maxLength: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.passwordContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        name: \"password\",\n        style: styles.textInput,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        placeholderTextColor: \"#6363638a\",\n        onChangeText: function onChangeText(evt) {\n          _this2.setState({\n            password: evt\n          });\n        },\n        maxLength: 30,\n        ref: this.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }), React.createElement(Icon, {\n        source: require(\"../../../assets/icons/time.png\"),\n        size: 20,\n        onPress: function onPress() {\n          return _changeIcon();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }))), React.createElement(Button, {\n        underlayColor: \"transparent\",\n        style: !isEnabled ? styles.bttnDisabled : styles.bttn,\n        shadowless: true,\n        onPress: function onPress() {\n          return _this2.onPressLogin();\n        },\n        disabled: !isEnabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: !isEnabled ? styles.logginBttnTextDisabled : styles.loginBttnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"Login\")), React.createElement(View, {\n        style: styles.textContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"Forgot your Password?\"), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, \"Not account yet? \", React.createElement(Text, {\n        style: styles.createText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 30\n        }\n      }, \"Create\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["/Users/steve/Desktop/Projects/recipes/src/screens/Auth/LoginScreen.js"],"names":["React","Button","styles","Icon","LoginScreen","props","onPressLogin","user","current","clear","password","navigation","navigate","state","createRef","isEnabled","length","authContainer","textInputContainer","textInput","evt","setState","passwordContainer","require","_changeIcon","bttnDisabled","bttn","logginBttnTextDisabled","loginBttnText","textContainer","text","createText","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'galio-framework';\nimport {\n    View,  \n    TextInput,\n    Text,\n    Image,\n  } from 'react-native';\nimport styles from './styles';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\n\n\nexport default class LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      password: ''\n    }\n    this.user = React.createRef();\n    this.password = React.createRef();\n  }\n\n  onPressLogin = () => {\n    this.user.current.clear();\n    this.password.current.clear();\n    this.props.navigation.navigate('Home');\n  };\n\n  render() {\n    const { user, password } = this.state;\n    const isEnabled =  user.length > 0 &&  password.length > 0;\n    return (\n      <View style={styles.authContainer}>\n        <View style={styles.textInputContainer}>\n            <TextInput\n              name=\"user\"\n              style={styles.textInput}\n              placeholder=\"User\"\n              placeholderTextColor=\"#6363638a\"\n              onChangeText = {evt => {\n                this.setState({ user: evt });\n              }}\n              ref={this.user}\n              maxLength={30}\n            />\n            <View style={styles.passwordContainer}>\n              <TextInput\n                name=\"password\"\n                style={styles.textInput}\n                placeholder=\"Password\"\n                secureTextEntry={true}\n                placeholderTextColor=\"#6363638a\"\n                onChangeText = {evt => {\n                  this.setState({ password: evt });\n                }}\n                maxLength={30}\n                ref={this.password}\n              />\n              <Icon source={require('../../../assets/icons/time.png')} size={20} onPress={() => _changeIcon()} />\n            </View>\n            \n        </View>\n        <Button underlayColor='transparent' \n          style = { \n            !isEnabled ? \n            styles.bttnDisabled : \n            styles.bttn \n          }\n          shadowless \n          onPress={() => this.onPressLogin()}\n          disabled={!isEnabled}\n        >\n          <Text \n            style={\n              !isEnabled ? \n              styles.logginBttnTextDisabled: \n              styles.loginBttnText \n            }\n          >\n            Login\n          </Text>\n        </Button>\n        <View style={styles.textContainer}>\n          <Text style={styles.text}>\n            Forgot your Password?\n          </Text>\n          <Text style={styles.text}>\n            Not account yet? <Text style={styles.createText}>Create</Text>\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}