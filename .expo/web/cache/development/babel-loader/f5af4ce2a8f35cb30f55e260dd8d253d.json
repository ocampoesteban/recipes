{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/steve/Desktop/Projects/recipes/src/screens/Recipe/RecipeScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport CarouselC from \"../../components/Carousel/Carousel\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    viewportWidth = _Dimensions$get.width;\n\nvar RecipeScreen = function (_React$Component) {\n  _inherits(RecipeScreen, _React$Component);\n\n  var _super = _createSuper(RecipeScreen);\n\n  function RecipeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderImage = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      })));\n    };\n\n    _this.onPressIngredient = function (item) {\n      var name = getIngredientName(item);\n      var ingredient = item;\n\n      _this.props.navigation.navigate('Ingredient', {\n        ingredient: ingredient,\n        name: name\n      });\n    };\n\n    _this.state = {\n      activeSlide: 0\n    };\n    return _this;\n  }\n\n  _createClass(RecipeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var activeSlide = this.state.activeSlide;\n      debugger;\n      var navigation = this.props.navigation;\n      var item = navigation.getParam('item');\n      var category = getCategoryById(item.categoryId);\n      var title = getCategoryName(category.id);\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(CarouselC, {\n        item: item,\n        activeSlide: activeSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.infoRecipeContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.infoRecipeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, item.title), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('RecipesList', {\n            category: category,\n            title: title\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, getCategoryName(item.categoryId).toUpperCase()))), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.infoPhoto,\n        source: require(\"../../../assets/icons/time.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.infoRecipe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, item.time, \" minutes \")), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, React.createElement(ViewIngredientsButton, {\n        onPress: function onPress() {\n          var ingredients = item.ingredients;\n          var title = 'Ingredients for ' + item.title;\n          navigation.navigate('IngredientsDetails', {\n            ingredients: ingredients,\n            title: title\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.infoDescriptionRecipe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, item.description))));\n    }\n  }]);\n\n  return RecipeScreen;\n}(React.Component);\n\nRecipeScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTransparent: 'true',\n    headerLeft: React.createElement(BackButton, {\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    })\n  };\n};\n\nexport { RecipeScreen as default };","map":{"version":3,"sources":["/Users/steve/Desktop/Projects/recipes/src/screens/Recipe/RecipeScreen.js"],"names":["React","styles","getIngredientName","getCategoryName","getCategoryById","BackButton","CarouselC","ViewIngredientsButton","Dimensions","get","viewportWidth","width","RecipeScreen","props","renderImage","item","imageContainer","image","uri","onPressIngredient","name","ingredient","navigation","navigate","state","activeSlide","getParam","category","categoryId","title","id","container","infoRecipeContainer","infoRecipeName","infoContainer","toUpperCase","infoPhoto","require","infoRecipe","time","ingredients","infoDescriptionRecipe","description","Component","navigationOptions","headerTransparent","headerLeft","goBack"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  TouchableHighlight\n} from 'react-native';\nimport styles from './styles';\nimport { getIngredientName, getCategoryName, getCategoryById } from '../../data/MockDataAPI';\nimport BackButton from '../../components/BackButton/BackButton';\nimport CarouselC from '../../components/Carousel/Carousel';\n\nimport ViewIngredientsButton from '../../components/ViewIngredientsButton/ViewIngredientsButton';\n\nconst { width: viewportWidth } = Dimensions.get('window');\n\nexport default class RecipeScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => {\n    return {\n      headerTransparent: 'true',\n      headerLeft: (\n        <BackButton\n          onPress={() => {\n            navigation.goBack();\n          }}\n        />\n      )\n    };\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSlide: 0\n    };\n  }\n\n  renderImage = ({ item }) => (\n    <TouchableHighlight>\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: item }} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  onPressIngredient = item => {\n    var name = getIngredientName(item);\n    let ingredient = item;\n    this.props.navigation.navigate('Ingredient', { ingredient, name });\n  };\n\n  render() {\n    const { activeSlide } = this.state;\n    debugger\n    const { navigation } = this.props;\n    const item = navigation.getParam('item');\n    const category = getCategoryById(item.categoryId);\n    const title = getCategoryName(category.id);\n\n    return (\n      <ScrollView style={styles.container}>\n        <CarouselC item={item} activeSlide={activeSlide} />\n        <View style={styles.infoRecipeContainer}>\n          <Text style={styles.infoRecipeName}>{item.title}</Text>\n          <View style={styles.infoContainer}>\n            <TouchableHighlight\n              onPress={() => navigation.navigate('RecipesList', { category, title })}\n            >\n              <Text style={styles.category}>{getCategoryName(item.categoryId).toUpperCase()}</Text>\n            </TouchableHighlight>\n          </View>\n\n          <View style={styles.infoContainer}>\n            <Image style={styles.infoPhoto} source={require('../../../assets/icons/time.png')} />\n            <Text style={styles.infoRecipe}>{item.time} minutes </Text>\n          </View>\n\n          <View style={styles.infoContainer}>\n            <ViewIngredientsButton\n              onPress={() => {\n                let ingredients = item.ingredients;\n                let title = 'Ingredients for ' + item.title;\n                navigation.navigate('IngredientsDetails', { ingredients, title });\n              }}\n            />\n          </View>\n          <View style={styles.infoContainer}>\n            <Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\n/*cooking steps\n<View style={styles.infoContainer}>\n  <Image style={styles.infoPhoto} source={require('../../../assets/icons/info.png')} />\n  <Text style={styles.infoRecipe}>Cooking Steps</Text>\n</View>\n<Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n*/\n"]},"metadata":{},"sourceType":"module"}